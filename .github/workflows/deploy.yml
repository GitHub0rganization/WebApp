name: CD

on: 
  push:
    branches:
      - 'master'

jobs:
  api_build:
    name: API Build
    runs-on: ubuntu-latest

    strategy:
      matrix:
        go-version: [1.12.x]

    steps:
    - name: Install Go ${{ matrix.go-version }}
      uses: actions/setup-go@v1
      with:
        go-version: ${{ matrix.go-version }}
    - uses: actions/checkout@v1
    - name: Build main.go
      run: |
        cd api/src
        go build cmd/api/main.go

  client_build:
    name: Client Build

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [8.x]

    steps:
    - name: Use Node ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - uses: actions/checkout@v1
    - name: Yarn install, build
      run: |
        cd ui
        yarn install
        yarn build

  api_test:
    name: API Test
    runs-on: ubuntu-latest

    strategy:
      matrix:
        go-version: [1.12.x]

    steps:
    - name: Install Go ${{ matrix.go-version }}
      uses: actions/setup-go@v1
      with:
        go-version: ${{ matrix.go-version }}
    - uses: actions/checkout@v1
    - name: Run tests
      run: |
        cd api/src
        go test ./... -cover
      
  deploy:
    name: Deploy
    needs: [build, test]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1
      - name: Create GitHub deployment
        uses: chrnorm/deployment-action@releases/v1
        id: deployment
        with:
          token: "${{ github.token }}"
          target-url: https://linqs.hoge
          environment: production
      # ここでできたバイナリをデプロイするみたいな感じ
      # #####################################
      - name: Deploy Example
        run: echo Deploy!!!
      # #####################################
      - name: Update deployment status(success)
        if: success()
        uses: chrnorm/deployment-status@releases/v1
        with:
          token: "${{ github.token }}"
          target-url: https://linqs.hoge
          state: "success"
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}
      - name: Update deployment status(failure)
        if: failure()
        uses: chrnorm/deployment-status@releases/v1
        with:
          token: "${{ github.token }}"
          target-url: https://linqs.hoge
          state: "failure"
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}
